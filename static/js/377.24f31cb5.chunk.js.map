{"version":3,"file":"static/js/377.24f31cb5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/contactform/ContactForm.module.css?3637","components/contactform/ContactForm.js","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.js","webpack://react-homework-template/./src/components/contactlist/ContactList.module.css?a617","webpack://react-homework-template/./src/components/contactitem/ContactItem.module.css?8f87","components/contactitem/ContactItem.js","components/contactlist/ContactList.js","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["\nexport const getContacts = state => state.contacts.contacts.items;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\nexport const getFilter = state => state.filter.filter;\n\n// export const getContacts = state => state.contacts.contacts.items;\n// export const getIsLoading = state => state.contacts.contacts.isLoading;\n// export const getError = state => state.contacts.contacts.error;\n// export const getFilter = state => state.filters.filter;\n\n// export const getContacts = state => state.contacts.contacts.items;\n// export const getFilter = state => state.filter.filter;","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"ContactForm_form__wrapper__ULOxd\",\"form__body\":\"ContactForm_form__body__zkmhE\",\"form__title\":\"ContactForm_form__title__55+eJ\",\"form__name\":\"ContactForm_form__name__U73wL\",\"form__number\":\"ContactForm_form__number__J2FyM\",\"input__name\":\"ContactForm_input__name__HB2Ax\",\"input__number\":\"ContactForm_input__number__SPItZ\",\"form__button\":\"ContactForm_form__button__C5BPA\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  console.log(contacts)\n  console.log(name)\n  console.log(number)\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: name,\n      number: number,\n    };\n    const nameUser = name;\n    const doubleContact = contacts.some(\n      ({ name }) => name.toLowerCase() === nameUser.toLowerCase()\n    );\n\n    if (doubleContact) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    } else \n    dispatch(addContacts(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  return (\n    <div className={css.form__wrapper}>\n      <h1 className={css.form__title}>Phonebook</h1>\n      <form className={css.form__body} onSubmit={handleSubmit}>\n        <label className={css.form__name}>\n          Name\n          <input\n            className={css.input__name}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.form__number}>\n          Number\n          <input\n            className={css.input__number}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrapper\":\"Filter_filter__wrapper__oxGwo\",\"filter__label\":\"Filter_filter__label__333j7\",\"filter__input\":\"Filter_filter__input__HeWjX\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  \n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    event.preventDefault();\n    const value = event.currentTarget.value;\n    dispatch(addFilter(value))\n  }\n\n  return (\n    <div className={css.filter__wrapper}>\n      <label className={css.filter__label}>\n        Find contacts by name\n        <input\n          className={css.filter__input}\n          type=\"text\"\n          onChange={handleChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__5k0G9\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact__item\":\"ContactItem_contact__item__EhgFx\",\"contact__name\":\"ContactItem_contact__name__cbQ4X\",\"contact__number\":\"ContactItem_contact__number__mhUC8\",\"contact__button\":\"ContactItem_contact__button__hqpH1\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.contact__item} key={contact.id}>\n      <span className={css.contact__name}>{contact.name}</span>\n      <span className={css.contact__number}>{contact.number}</span>\n      <button\n        className={css.contact__button}\n        type=\"button\"\n        onClick={() => dispatch(deleteContacts(contact.id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propType = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport { ContactItem } from 'components/contactitem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { getFilter } from 'redux/contacts/selectors';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts); \n   const filters = useSelector(getFilter);\n\n   console.log(contacts)\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase())\n  );\n\nconsole.log(`contacts${visibleContacts}`)\n\n  return (\n    <>\n      <ul className={css.contact__list}>\n        {visibleContacts.map(contact => (\n            <ContactItem\n              contact={contact}\n            \n      \n            />\n          ))}\n      </ul>\n    </>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__fniYR\",\"filter\":\"Contacts_filter__Aqr0a\",\"contacts\":\"Contacts_contacts__LNvgJ\"};","import { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { getIsLoading, getError } from \"redux/contacts/selectors\";\nimport { ContactForm } from \"components/contactform/ContactForm\";\nimport { Filter } from \"components/filter/Filter\";\nimport { ContactList } from \"components/contactlist/ContactList\";\nimport { ContactItem } from \"components/contactitem/ContactItem\";\nimport css from './Contacts.module.css'\n// import css from './App.module.css';\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  return (\n    <div className={css.wrapper}>\n      <Helmet>\n        <title>Your phonebook</title>\n      </Helmet>\n\n      <ContactForm/>\n\n      <div>\n        <h2 className={css.filter}>Filter</h2>\n          <Filter/>\n        <h2 className={css.contacts}>Contacts</h2>\n       \n        <ContactList>\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactItem />\n        </ContactList>\n      </div>\n    </div>\n  );\n};\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","console","log","handleChange","event","target","value","reset","className","css","onSubmit","preventDefault","contact","nameUser","some","toLowerCase","alert","addContacts","type","onChange","pattern","title","required","Filter","currentTarget","addFilter","ContactItem","onClick","deleteContacts","id","propType","PropTypes","isRequired","ContactList","filters","visibleContacts","includes","map","App","useEffect","fetchContacts","Helmet"],"sourceRoot":""}